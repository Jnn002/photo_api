"""Initial migration: User, Role, Permission, Client models

Revision ID: 561b40e42efb
Revises:
Create Date: 2025-10-08 21:51:21.257234

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '561b40e42efb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('module', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='studio'
    )
    op.create_index(op.f('ix_studio_permission_code'), 'permission', ['code'], unique=True, schema='studio')
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='studio'
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['studio.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='studio'
    )
    op.create_index(op.f('ix_studio_user_email'), 'user', ['email'], unique=True, schema='studio')
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('primary_phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('secondary_phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('delivery_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('client_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['studio.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='studio'
    )
    op.create_index(op.f('ix_studio_client_email'), 'client', ['email'], unique=True, schema='studio')
    op.create_index(op.f('ix_studio_client_full_name'), 'client', ['full_name'], unique=False, schema='studio')
    op.create_table('rolepermission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('granted_at', sa.DateTime(), nullable=False),
    sa.Column('granted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['studio.user.id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['studio.permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['studio.role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='studio'
    )
    op.create_table('userrole',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.Column('assigned_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_by'], ['studio.user.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['studio.role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['studio.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='studio'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userrole', schema='studio')
    op.drop_table('rolepermission', schema='studio')
    op.drop_index(op.f('ix_studio_client_full_name'), table_name='client', schema='studio')
    op.drop_index(op.f('ix_studio_client_email'), table_name='client', schema='studio')
    op.drop_table('client', schema='studio')
    op.drop_index(op.f('ix_studio_user_email'), table_name='user', schema='studio')
    op.drop_table('user', schema='studio')
    op.drop_table('role', schema='studio')
    op.drop_index(op.f('ix_studio_permission_code'), table_name='permission', schema='studio')
    op.drop_table('permission', schema='studio')
    # ### end Alembic commands ###
